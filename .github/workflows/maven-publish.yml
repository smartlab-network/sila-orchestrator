# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        java: [ 11]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Sync submodule
      run: git submodule sync
    - name: Update submodule
      run: git submodule update --init --recursive
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java }}
        distribution: adopt
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    - name: Build with Maven
      run: mvn clean install -V
    - name: Package with Maven
      run: mvn clean package 
    - name: mkdir staging
      run: mkdir staging
    - name: copy .jar to staging
      run: cp target/*.jar staging
    - name: copy .exe to staging
      run: cp target/*.exe staging
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: sila-orchestrator.exe
    - name: Run sila-orchestrator in CLI mode
      run: java -jar ./target/sila-orchestrator.jar -hvl --info
